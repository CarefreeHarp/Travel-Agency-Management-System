https://github.com/CarefreeHarp/Travel-Agency-Management-System

Actualizaciones del proyecto

Commit #2 (Clase PlanTuristico y metodos de modificar){
	- Creé la clase Plan Turístico
	- Creé el metodo para modificar clientes
	- Creé el metodo para modificar planes turisticos
	- Creé la excepción de "ExcepcionIndicePorFueraDelLimite" para controlar que a la hora de que el usuario elija cual objeto modificar/eliminar nos aseguremos de que esté dentro del tamaño arreglo
	- Modifiqué el método setCodigo de la clase AtributosComunes. Cada vez que se llama a este método, verifica en todo el ArrayList de objetos que no se repita el mismo código para la misma clase (Si se puede repetir código si dos objetos son de diferentes clases)
	- Creé la excepción de "ExcepcionCodigoRepetido" para que el método setCódigo de la clase AtributosComunes lo pueda tirar y podamos controlarlo
	- El main ya esta habilitado para usar todos lo que hemos programado
}

Commit #3 (Clase Vuelos){
	- Creé la clase Plan vuelos 
	- Manejé algunas advertencias leves del compilador
}

Commit #4 (Clase hotel y Clase Aerolinea){
	- Creamos la clase Aerolinea
	- Creamos la clase Hotel
	- Creamos una nueva excepcion "ExcepcionMasDeCincoEstrellas" para no dejar digitar una categoria inferior a 1 ni superior a 5 estrellas en los hoteles
	- El metodo setCategoria de los hoteles tira la excepcion "ExcepcionMasDeCincoEstrellas"
	- Las confirmaciones de eliminacion de objetos ahora se pueden confirmar siempre y cuando el usuario digite un si a lo largo de todo el string usando .tolowercase().contains("si")
}

Commit # 5 (Clase Reserva preliminar){
	- De la clase reserva, se implementaron los métodos de registrar y de modificar solo el cliente
	- Muchas correciones variadas
}

Commit # 6 (Correciones generales){
	- Correcciones generales varias
}

Commit # 7 (Release Candidate #1){
	- Se realizaron muchas correciones
	- Se crearon los métodos que permiten guardar y leer de los archivos
	- Se realizo el método de escribir el informe en el archivo de texto
	- Se hizo el método de modificar reservas
	- Se hizo el método de cancelar reservas
	- Se prohíbe que el usuario digite una fecha de fin anterior a la fecha de inicio en los planes turísticos gracias a una nueva excepción personalizada "ExcepcionFechasSinSentido"
	- Se identifica si una clase no esta llenada si su atributo nombre es "", es decir, vacío (Aplica para todas las clases excepto reserva ya que esta no tiene atributo nombre)
	- Primer candidato a ser la entrega final
}

Commit # 8 (Release Candidate #2){
	- Se arregló que no se tenía en cuenta que al eliminar objetos de la lista, se hacía por código y aunque el código no se repite en la misma clase, si se repetía para diferentes clases por lo cual, borraba objetos con el mismo código pero de diferente clase
	- Se implementó el método que verifica que no se puedan eliminar objetos si existen en una reserva
	- Se implementaron mejoras visuales para la creación del archivo txt de reservas
	- Se implementó para el menú principal que cada vez que se digite un número diferente a los del menú, el programa termine la ejecución
	- Segundo candidato a ser la prueba final
}

Commit # 9 (Release Candidate #3){
	- Ahora se puede buscar todo por minúsculas y mayúsculas
	- Se corrigió un error relacionado con la asignacion de aerolíneas en los vuelos
}
